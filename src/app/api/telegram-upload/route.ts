import { NextResponse } from 'next/server';

export const runtime = 'nodejs';        // ‚Üê –≤–∞–∂–Ω–æ
export const dynamic = 'force-dynamic'; // —á—Ç–æ–±—ã –Ω–µ –∫–µ—à–∏–ª–æ –æ—Ç–≤–µ—Ç—ã

export async function POST(request: Request) {
  try {
    const { file, fileName, orderNumber, objectName } = await request.json();

    if (!file) {
      return NextResponse.json({ success: false, error: '–§–∞–π–ª –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω' }, { status: 400 });
    }

    // –∏–∑–≤–ª–µ–∫–∞–µ–º mime –∏ payload
    const m = String(file).match(/^data:(.+);base64,(.+)$/);
    if (!m) {
      return NextResponse.json({ success: false, error: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ (base64)' }, { status: 400 });
    }
    const mime = m[1];
    const raw  = m[2];
    const buffer = Buffer.from(raw, 'base64');

    const telegramBotToken = process.env.TELEGRAM_BOT_TOKEN;
    const telegramChatId   = process.env.TELEGRAM_CHAT_ID || process.env.TELEGRAM_ADMIN_CHAT_ID;

    if (!telegramBotToken || !telegramChatId) {
      return NextResponse.json({ success: false, error: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram Bot API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞' }, { status: 500 });
    }

    const formData = new FormData();
    formData.append('chat_id', telegramChatId);
    formData.append('caption', `üìã –ó–∞—è–≤–∫–∞: ${orderNumber}\nüè¢ –û–±—ä–µ–∫—Ç: ${objectName}\nüìÅ –§–∞–π–ª: ${fileName}`);
    formData.append('photo', new Blob([buffer], { type: mime }), fileName); // ‚Üê type –≤–∞–∂–µ–Ω

    const telegramResponse = await fetch(`https://api.telegram.org/bot${telegramBotToken}/sendPhoto`, {
      method: 'POST',
      body: formData,
    });

    const telegramResult = await telegramResponse.json();
    if (!telegramResponse.ok || !telegramResult?.ok) {
      return NextResponse.json(
        { success: false, error: telegramResult?.description || '–û—à–∏–±–∫–∞ Telegram API', tg: telegramResult },
        { status: 400 }
      );
    }

    const sizes = telegramResult.result.photo || [];
    const fileId = sizes[sizes.length - 1]?.file_id;

    return NextResponse.json({ success: true, file_id: fileId, fileName });

  } catch (error) {
    console.error('upload telegram error:', error);
    return NextResponse.json({ success: false, error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 });
  }
}
