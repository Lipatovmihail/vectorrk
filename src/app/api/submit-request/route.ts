import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    
    console.log('üì§ API Route: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', body)
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ n8n webhook —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
    const response = await fetch('https://n8nunit.miaai.ru/webhook/f760ae2e-d95f-4f48-9134-c60aa408372b', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        ...(body.telegram_id && { 'X-Telegram-ID': body.telegram_id }),
        ...(body.initData && { 'X-Telegram-InitData': body.initData }),
      },
      body: JSON.stringify(body)
    })

    console.log('üì¶ API Route: –û—Ç–≤–µ—Ç –æ—Ç n8n:', response.status, response.statusText)

    if (!response.ok) {
      const errorText = await response.text()
      console.error('‚ùå API Route: –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorText)
      return NextResponse.json(
        { success: false, error: `HTTP error! status: ${response.status} - ${errorText}` },
        { status: response.status }
      )
    }

    const data = await response.json()
    console.log('üì¶ API Route: –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç –æ—Ç n8n:', data)
    
    // n8n –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    let actualData = data
    if (Array.isArray(data) && data.length > 0) {
      actualData = data[0]
    }

    return NextResponse.json({
      success: true,
      data: actualData
    })

  } catch (error) {
    console.error('‚ùå API Route: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error)
    return NextResponse.json(
      { success: false, error: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    )
  }
}
